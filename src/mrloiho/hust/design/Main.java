/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrloiho.hust.design;

import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import mrloiho.hust.file_io.FileIO;
import mrloiho.hust.model.Dictionary;

/**
 *
 * @author Mr Loi Ho
 */
public class Main extends javax.swing.JFrame {

    private static ArrayList<Dictionary> listDics = new ArrayList<Dictionary>();
    public static String dirName = "F://PROJECT/EasyDictionary/Eng-Vie_database.txt";
    public String inputStr = "";
    public ArrayList<String> listWordOrigins = new ArrayList<String>();
    DefaultListModel<String> mod;

    public static ArrayList<Dictionary> getListDics() {
        return listDics;
    }

    public static void setListDics(ArrayList<Dictionary> listDics) {
        Main.listDics = listDics;
    }

    /**
     * Creates new form Dictionary
     */
    public Main() {
        initComponents();
    }

    /* return index of word in listDics*/
//    public int searchReturnIndex(String word) {
//        int index = 0;
//        for (int i = 0; i < listDics.size(); i++) {
//            if (word.equals(listDics.get(i).getWordOrigin())) {
//                index = i;
//            }
//        }
//        return index;
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameDictionary = new javax.swing.JLabel();
        inputText = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        sp = new javax.swing.JScrollPane();
        listWords = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listResults = new javax.swing.JTextPane();
        add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        nameDictionary.setFont(new java.awt.Font("Palatino Linotype", 3, 24)); // NOI18N
        nameDictionary.setText("Eng- Vie Dictionary");

        inputText.setFont(new java.awt.Font("Palatino Linotype", 2, 18)); // NOI18N
        inputText.setForeground(new java.awt.Color(153, 153, 153));
        inputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextActionPerformed(evt);
            }
        });
        inputText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputTextKeyTyped(evt);
            }
        });

        search.setFont(new java.awt.Font("Palatino Linotype", 3, 18)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        listWords.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        sp.setViewportView(listWords);

        listResults.setContentType("text/html"); // NOI18N
        listResults.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        listResults.setFocusable(false);
        jScrollPane3.setViewportView(listResults);

        add.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(nameDictionary)
                                .addGap(286, 286, 286)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(nameDictionary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextActionPerformed
        // TODO add your handling code here:
        inputStr = inputText.getText();
        inputText.setText(inputStr);
    }//GEN-LAST:event_inputTextActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String text = inputText.getText();
        showTextResult(listDics.get(listWords.getSelectedIndex()));
        inputText.setText("");

    }//GEN-LAST:event_searchActionPerformed
    private ArrayList<Dictionary> arr;

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        mod = new DefaultListModel<>();
        listWords.setModel(mod);
        arr = new ArrayList<>();
        Dictionary dic;
        for (int i = 0; i < listDics.size(); i++) {
            mod.addElement(listDics.get(i).getWordOrigin());
        }
    }//GEN-LAST:event_formWindowOpened

    private void inputTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextKeyTyped
        String text = getInputText(evt);
        System.out.println("input: " + text);
        for (int i = 0; i < mod.size(); i++) {
            String val = "" + mod.getElementAt(i);
            if (val.startsWith(text)) {
                listWords.setSelectedIndex(i);
                JScrollBar sb = sp.getVerticalScrollBar();
                sb.setValue(i * 18);
                return;
            }
        }
        listResults.setText("<font color=red>" + "'" + text + "'" + " is not found!" + "</font>" + "\n");
        listWords.clearSelection();

    }//GEN-LAST:event_inputTextKeyTyped

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        AddNewWord addNewWord= new AddNewWord();
        addNewWord.setVisible(true);
        
    }//GEN-LAST:event_addActionPerformed

    public  String getInputText(java.awt.event.KeyEvent evt) {
        String text = inputText.getText().trim().toLowerCase();
        text += evt.getKeyChar();
        text = text.trim().toLowerCase();
        return text;
    }

//    public ArrayList<String> setListWordOrigins() {
//        ArrayList<String> str = new ArrayList<String>();
//        for (int i = 0; i < listDics.size(); i++) {
//            str.add(listDics.get(i).getWordOrigin());
//        }
//        return str;
//    }
    public void showTextResult(Dictionary dic) {
        String result = "";
        result = "<font color=black><Strong>" + dic.getWordOrigin() + "</strong></font>"
                + " "+dic.getWordSpelling()
                + "<br><u>" + "<font color=Red>" + dic.getWordType() + "</font>" + "</u></br>";
        if (dic.wordMeans.size() == 1) {
            for (int i = 0; i < dic.wordMeans.size(); i++) {
                result += "<font color=blue><br>" + dic.wordMeans.get(i) + "</br></font>";
            }
        } else if (dic.wordMeans.size() > 1) {
            for (int i = 0; i < dic.wordMeans.size(); i++) {
                result += "<font color=Blue><br> <em>Nghĩa thứ " + (i + 1) + ": </em>" + dic.wordMeans.get(i) + "</br></font>";
            }
        }

        listResults.setText(result);
    }

    private void setTextValue(JTextPane pane, String string, Color color, Font font) {
        StyledDocument doc = pane.getStyledDocument();
        Style style = pane.addStyle("", null);
        StyleConstants.setForeground(style, color);
        pane.setFont(font);
        try {
            doc.insertString(doc.getLength(), string, style);
        } catch (BadLocationException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*read File from input data "dirName"*/
        listDics = FileIO.readFile(dirName);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    /* search word start with value of s in array list*/
    public ArrayList<String> searchLookLike(ArrayList<String> list, String s) {
        ArrayList<String> listWords = new ArrayList<String>();
        if (s.trim().isEmpty()) {
            return list;
        } else {
            for (int i = 0; i < list.size(); i++) {
                if (list.get(i).indexOf(s) == 1) {
                    listWords.add(list.get(i));
                }
            }
            return listWords;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField inputText;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane listResults;
    private javax.swing.JList<String> listWords;
    private javax.swing.JLabel nameDictionary;
    private javax.swing.JButton search;
    private javax.swing.JScrollPane sp;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel<String> listModel;

}
