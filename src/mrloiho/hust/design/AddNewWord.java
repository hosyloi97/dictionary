/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrloiho.hust.design;

import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import mrloiho.hust.model.Dictionary;

/**
 *
 * @author Mr Loi Ho
 */
public class AddNewWord extends javax.swing.JFrame {

    /**
     * Creates new form AddNewWord
     */
    public AddNewWord() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addNewWord = new javax.swing.JLabel();
        notice = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        inputWordSpelling = new javax.swing.JTextField();
        inputWordType = new javax.swing.JTextField();
        inputWordOrigin = new javax.swing.JTextField();
        inputWordMean = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel1.setText("Word:");

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel2.setText("Spelling:");

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel3.setText("Type:");

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        jLabel4.setText("Mean:");

        addNewWord.setBackground(new java.awt.Color(127, 255, 0));
        addNewWord.setFont(new java.awt.Font("Palatino Linotype", 0, 24)); // NOI18N
        addNewWord.setText("Add New Word");

        notice.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        notice.setText("Nếu từ đã thêm có nhiều nghĩa (Mean) thì input các mean cách nhau bởi kí tự \"|-\""); // NOI18N

        submit.setFont(new java.awt.Font("Palatino Linotype", 3, 18)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        inputWordSpelling.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        inputWordSpelling.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputWordSpellingKeyTyped(evt);
            }
        });

        inputWordType.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        inputWordType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputWordTypeKeyTyped(evt);
            }
        });

        inputWordOrigin.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        inputWordOrigin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputWordOriginKeyTyped(evt);
            }
        });

        inputWordMean.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        inputWordMean.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputWordMeanKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(addNewWord)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(submit)
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputWordType)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputWordSpelling)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputWordOrigin, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputWordMean)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewWord)
                    .addComponent(submit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputWordOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputWordSpelling, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputWordType, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputWordMean, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        ArrayList<Dictionary> list= Main.getListDics();
        setWord(list);
        System.out.println("dic1:"+list.get(list.size()-1).getWordOrigin());
        try {
            writeFile(Main.dirName, list);
        } catch (IOException ex) {
            Logger.getLogger(AddNewWord.class.getName()).log(Level.SEVERE, null, ex);
        }
                System.out.println("dic1:"+list.get(list.size()-1).getWordOrigin());

    }//GEN-LAST:event_submitActionPerformed

    private void inputWordOriginKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputWordOriginKeyTyped
//        inputWordOrigin.setText(getInputText(evt, inputWordOrigin));
    }//GEN-LAST:event_inputWordOriginKeyTyped

    private void inputWordSpellingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputWordSpellingKeyTyped
//        inputWordSpelling.setText(getInputText(evt, inputWordSpelling));
    }//GEN-LAST:event_inputWordSpellingKeyTyped

    private void inputWordTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputWordTypeKeyTyped
//        inputWordType.setText(getInputText(evt, inputWordType));
    }//GEN-LAST:event_inputWordTypeKeyTyped

    private void inputWordMeanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputWordMeanKeyTyped
//        inputWordMean.setText(getInputText(evt, inputWordMean));
    }//GEN-LAST:event_inputWordMeanKeyTyped

    public  String getInputText(java.awt.event.KeyEvent evt,JTextField inputText) {
        String text = inputText.getText().trim().toLowerCase();
        text += evt.getKeyChar();
        text = text.trim().toLowerCase();
        return text;
    }
    
    public ArrayList<Dictionary> setWord(ArrayList<Dictionary> listDics) {
        Dictionary dic = new Dictionary();
        dic.setWordOrigin(inputWordOrigin.getText());
        dic.setWordSpelling(inputWordSpelling.getText());
        dic.setWordType(inputWordType.getText());
        dic.wordMeans.add(inputWordMean.getText()) ;
        listDics.add(dic);
        return listDics;
    }
    public void writeFile(String fileNameOut,ArrayList<Dictionary> listWors) throws IOException{
                FileOutputStream fileOutputStream = new FileOutputStream(fileNameOut);
        OutputStreamWriter outputStreamWriter = new OutputStreamWriter(fileOutputStream, "UTF-8");
        Writer out = new BufferedWriter(outputStreamWriter);
        for (int i = 0; i < listWors.size(); i++) {
            Dictionary d= listWors.get(i);
            String mean="";
            for(int j=0;j<d.wordMeans.size();j++){
                mean="|-"+d.wordMeans.get(j)+mean;
            }
            out.write(d.getWordOrigin()+"## "+d.getWordSpelling()+"#* "+
                    d.getWordType()+"   "+mean);
            out.write("\n");
            
        }
        out.close();
        fileOutputStream.close();
        
        JOptionPane.showMessageDialog(rootPane, "write file done");
        System.out.println("write file done!");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewWord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addNewWord;
    public static javax.swing.JTextField inputWordMean;
    public static javax.swing.JTextField inputWordOrigin;
    public static javax.swing.JTextField inputWordSpelling;
    public static javax.swing.JTextField inputWordType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel notice;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
